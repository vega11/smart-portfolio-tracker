version: '3.8'

services:
  # Redis Service
  redis:
    image: redis:alpine
    container_name: backend-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Web Service
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-web
    environment:
      - FLASK_ENV=development
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SECRET_KEY=your-secret-key
      - DATABASE_URL=sqlite:///app.db
    volumes:
      - ./backend:/app
    ports:
      - "5001:5000"  # Map host port 5001 to container port 5000
    depends_on:
      - redis
    command: >
      sh -c "flask db upgrade &&
             flask run --host=0.0.0.0"
    networks:
      - app-network

  # Celery Worker Service
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-celery_worker
    command: celery -A tasks worker --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    user: "501:20"
    networks:
      - app-network

  # Celery Beat Service
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-celery_beat
    command: celery -A tasks beat --loglevel=info
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - app-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"  # Map host port 3000 to container port 80
    environment:
      - REACT_APP_API_URL=http://backend-web:5000  # Reference the backend service
    depends_on:
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge